swagger: "2.0"
info:
  title: Devops API
  description: Devops System APIs.
  version: 1.0.0
  contact:
    email: liuchengming@laiye.com
basePath: /v1
paths:
  /config/add:
    post:
      tags:
      - config
      description: 新增配置
      operationId: ConfigsController.新增配置
      parameters:
      - in: formData
        name: service_module
        description: 服务模块
        required: true
        type: string
      - in: formData
        name: content
        description: 配置json内容
        required: true
        schema:
          $ref: '#/definitions/json'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
        "403":
          description: 参数错误:缺失或格式错误
  /config/delete:
    post:
      tags:
      - config
      description: 修改配置
      operationId: ConfigsController.修改配置
      parameters:
      - in: formData
        name: id
        description: 需要删除的ID
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
  /config/list:
    get:
      tags:
      - config
      description: 查询配置
      operationId: ConfigsController.查询配置
      parameters:
      - in: formData
        name: service_module
        description: 服务模块
        required: true
        type: string
      - in: formData
        name: project_name
        description: 项目名称
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
  /config/sm:
    get:
      tags:
      - config
      description: 查询服务模块
      operationId: ConfigsController.查询服务模块
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
  /config/update:
    post:
      tags:
      - config
      description: 修改配置
      operationId: ConfigsController.修改配置
      parameters:
      - in: formData
        name: id
        description: 需要更新的ID
        required: true
        type: string
      - in: formData
        name: content
        description: 需要更新的内容(Json)
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
  /depa/:
    get:
      tags:
      - depa
      description: 查询部门列表
      operationId: DepartmentController.查询部门列表
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Department'
        "500":
          description: 查询错误
  /depa/{id}:
    post:
      tags:
      - depa
      description: 修改部门
      operationId: DepartmentController.修改部门
      parameters:
      - in: formData
        name: id
        description: 部门id
        required: true
        type: integer
        format: int64
      - in: formData
        name: name
        description: 部门名称
        required: true
        type: string
      - in: formData
        name: desc
        description: 部门描述
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Department'
        "500":
          description: 参数错误:缺失或格式错误
    delete:
      tags:
      - depa
      description: 删除部门
      operationId: DepartmentController.删除部门
      parameters:
      - in: formData
        name: id
        description: 部门id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Department'
        "500":
          description: 参数错误:缺失或格式错误
  /depa/add:
    post:
      tags:
      - depa
      description: 新建部门
      operationId: DepartmentController.新建部门
      parameters:
      - in: formData
        name: name
        description: 部门名称
        required: true
        type: string
      - in: formData
        name: desc
        description: 部门描述
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Department'
        "403":
          description: 参数错误:缺失或格式错误
  /user/add:
    post:
      tags:
      - user
      description: 添加用户
      operationId: UserController.添加用户
      parameters:
      - in: formData
        name: username
        description: 用户名称
        required: true
        type: string
      - in: formData
        name: password
        description: 密码
        required: true
        type: string
      - in: formData
        name: email
        description: 邮箱
        required: true
        type: string
      - in: formData
        name: phone
        description: 用户手机号
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "423":
          description: 参数错误:缺失或格式错误
  /user/auth:
    get:
      tags:
      - user
      description: 用户认证
      operationId: UserController.用户认证
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/Response'
        "401":
          description: unauthorized
  /user/delete:
    post:
      tags:
      - user
      description: 用户删除
      operationId: UserController.用户删除
      parameters:
      - in: formData
        name: id
        description: 用户ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "422":
          description: deleteError
  /user/list:
    get:
      tags:
      - user
      description: 用户列表
      operationId: UserController.用户列表
      parameters:
      - in: formData
        name: limit
        description: 返回最大页数量
        type: integer
        format: int64
      - in: formData
        name: offset
        description: 页面数量偏移码
        type: integer
        format: int64
      - in: formData
        name: username
        description: 用户名称模糊查询
        type: integer
        format: int64
      - in: formData
        name: email
        description: 邮箱地址模糊查询
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: unauthorized
  /user/login:
    post:
      tags:
      - user
      description: 用户登录
      operationId: UserController.用户登录
      parameters:
      - in: formData
        name: email
        description: 邮箱地址
        required: true
        type: string
      - in: formData
        name: password
        description: 密码
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LoginToken'
        "422":
          description: 验证错误:邮箱或密码错误
        "423":
          description: 参数错误:缺失或格式错误
definitions:
  '""':
    title: '""'
    type: object
  Response:
    title: Response
    type: object
  json:
    title: json
    type: object
  models.Config:
    title: Config
    type: object
    properties:
      config_git_id:
        $ref: '#/definitions/models.ConfigGit'
      config_process_id:
        $ref: '#/definitions/models.ConfigProcess'
      content:
        type: string
      create_time:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      update_time:
        type: string
        format: datetime
  models.ConfigGit:
    title: ConfigGit
    type: object
    properties:
      Config:
        type: array
        items:
          $ref: '#/definitions/models.Config'
      ConfigProcess:
        type: array
        items:
          $ref: '#/definitions/models.ConfigProcess'
      create_time:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      name:
        type: string
      service_module:
        type: string
      update_time:
        type: string
        format: datetime
  models.ConfigProcess:
    title: ConfigProcess
    type: object
    properties:
      Config:
        type: array
        items:
          $ref: '#/definitions/models.Config'
      config_git_id:
        $ref: '#/definitions/models.ConfigGit'
      create_time:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      name:
        type: string
      update_time:
        type: string
        format: datetime
  models.Department:
    title: Department
    type: object
    properties:
      User:
        type: array
        items:
          $ref: '#/definitions/models.User'
      create_time:
        type: string
        format: datetime
      desc:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      parent_id:
        $ref: '#/definitions/models.Department'
      update_time:
        type: string
        format: datetime
  models.LoginToken:
    title: LoginToken
    type: object
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/models.User'
  models.Menu:
    title: Menu
    type: object
    properties:
      Role:
        type: array
        items:
          $ref: '#/definitions/models.Role'
      icon:
        type: string
      id:
        type: integer
        format: int64
      linkurl:
        type: string
      name:
        type: string
      parent_id:
        $ref: '#/definitions/models.Menu'
      rtype:
        type: integer
        format: int64
      seq:
        type: integer
        format: int64
  models.Role:
    title: Role
    type: object
    properties:
      User:
        type: array
        items:
          $ref: '#/definitions/models.User'
      create_time:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      menu_id:
        type: array
        items:
          $ref: '#/definitions/models.Menu'
      name:
        type: string
      seq:
        type: integer
        format: int64
      update_time:
        type: string
        format: datetime
  models.User:
    title: User
    type: object
    properties:
      avatar:
        type: string
      create_time:
        type: string
        format: datetime
      department:
        $ref: '#/definitions/models.Department'
      email:
        type: string
      id:
        type: integer
        format: int64
      is_active:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      update_time:
        type: string
        format: datetime
      username:
        type: string
